import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';


const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    key: process.env.GOOGLE_PRIVATE_KEY,
    scopes: [
        'https://www.googleapis.com/auth/spreadsheets',
    ],
});

const sheetId = "1F5jZI2dOdlZWufkG1rMoApfDsPNcFlC-ggI-COY8ywc"


async function appendRow(){
    const doc = new GoogleSpreadsheet(sheetId, serviceAccountAuth);

    // await doc.loadInfo(); // loads document properties and worksheets
    // console.log(doc.title);
    // await doc.updateProperties({ title: 'renamed doc' });

    // const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
    // console.log(sheet.title);
    // console.log(sheet.rowCount);

    // // adding / removing sheets
    // const newSheet = await doc.addSheet({ title: 'another sheet' });
    // await newSheet.delete();

}

// const appendRow = async (row) => {
//   try {
//     const doc = await GoogleSpreadsheet.fromAuth({
//         client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
//         private_key: process.env.GOOGLE_PRIVATE_KEY,
//       });
//     await doc.loadInfo();
//     const sheet = doc.sheetsByIndex[0]; // Get the first sheet
//     await sheet.addRow(row);
//   } catch (error) {
//     console.error('Error:', error);
//   }
// };

export default appendRow;